{"ast":null,"code":"var _jsxFileName = \"/home/farhan/EverythingMart/client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport InvoicePage from './InvoicePage';\nimport './App.css'; // Import the CSS file for App.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('No file selected'); // Add fileName state\n  const [orders, setOrders] = useState([]);\n  const [selectedOrderId, setSelectedOrderId] = useState(null);\n\n  // Function to handle file input change\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile.name); // Set the selected file name\n  };\n\n  // Function to upload the CSV file\n  const uploadCSV = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Refresh the orders list after successful upload\n      getOrders();\n    } catch (error) {\n      console.error('Error uploading CSV:', error);\n    }\n  };\n\n  // Function to fetch all orders and their details\n  const getOrders = async () => {\n    try {\n      const response = await axios.get('/api/orders');\n      setOrders(response.data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n\n  // Function to generate invoice for a specific order\n  const viewInvoice = orderId => {\n    setSelectedOrderId(orderId);\n  };\n\n  // Function to clear the selected order ID and go back to the orders list\n  const goBackToOrders = () => {\n    setSelectedOrderId(null);\n  };\n  useEffect(() => {\n    // Fetch orders when the component mounts\n    getOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"EverythingMart Order Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), selectedOrderId ? /*#__PURE__*/_jsxDEV(InvoicePage, {\n      order: orders.find(order => order.orderId === selectedOrderId),\n      goBackToOrders: goBackToOrders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"custom-file-upload\",\n        children: [fileName, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadCSV,\n        children: \"Upload CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Customer Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Generate Invoice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.orderId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.customerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(order.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => viewInvoice(order.orderId),\n                  children: \"Generate Invoice\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)]\n            }, order.orderId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EKpRuOtD4/8CXydg77Gni8GNioU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","InvoicePage","jsxDEV","_jsxDEV","App","_s","file","setFile","fileName","setFileName","orders","setOrders","selectedOrderId","setSelectedOrderId","handleFileChange","e","selectedFile","target","files","name","uploadCSV","formData","FormData","append","post","headers","getOrders","error","console","response","get","data","viewInvoice","orderId","goBackToOrders","className","children","_jsxFileName","lineNumber","columnNumber","order","find","type","id","onChange","onClick","map","customerName","Date","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/home/farhan/EverythingMart/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport InvoicePage from './InvoicePage';\n\nimport './App.css'; // Import the CSS file for App.js\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('No file selected'); // Add fileName state\n  const [orders, setOrders] = useState([]);\n  const [selectedOrderId, setSelectedOrderId] = useState(null);\n\n  // Function to handle file input change\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile.name); // Set the selected file name\n  };\n\n  // Function to upload the CSV file\n  const uploadCSV = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // Refresh the orders list after successful upload\n      getOrders();\n    } catch (error) {\n      console.error('Error uploading CSV:', error);\n    }\n  };\n\n  // Function to fetch all orders and their details\n  const getOrders = async () => {\n    try {\n      const response = await axios.get('/api/orders');\n      setOrders(response.data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n\n  // Function to generate invoice for a specific order\n  const viewInvoice = (orderId) => {\n    setSelectedOrderId(orderId);\n  };\n\n  // Function to clear the selected order ID and go back to the orders list\n  const goBackToOrders = () => {\n    setSelectedOrderId(null);\n  };\n\n  useEffect(() => {\n    // Fetch orders when the component mounts\n    getOrders();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>EverythingMart Order Management</h1>\n      {selectedOrderId ? (\n        <InvoicePage\n          order={orders.find((order) => order.orderId === selectedOrderId)}\n          goBackToOrders={goBackToOrders}\n        />\n      ) : (\n        <div>\n          <label className=\"custom-file-upload\">\n            {fileName} {/* Display the selected file name */}\n            <input type=\"file\" id=\"fileInput\" onChange={handleFileChange} />\n          </label>\n          <button onClick={uploadCSV}>Upload CSV</button>\n          <div>\n            <h2>Orders</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Order ID</th>\n                  <th>Customer Name</th>\n                  <th>Date</th>\n                  <th>Generate Invoice</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders.map((order) => (\n                  <tr key={order.orderId}>\n                    <td>{order.orderId}</td>\n                    <td>{order.customerName}</td>\n                    <td>{new Date(order.date).toLocaleDateString()}</td>\n                    <td>\n                      <button onClick={() => viewInvoice(order.orderId)}>Generate Invoice</button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}