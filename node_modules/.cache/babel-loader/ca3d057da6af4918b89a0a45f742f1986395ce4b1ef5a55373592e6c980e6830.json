{"ast":null,"code":"var _jsxFileName = \"/home/farhan/EverythingMart/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [orders, setOrders] = useState([]);\n\n  // Function to handle file input change\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  // Function to upload the CSV file\n  const uploadCSV = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.post('https://localhost:8080/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Refresh the orders list after successful upload\n      getOrders();\n    } catch (error) {\n      console.error('Error uploading CSV:', error);\n    }\n  };\n\n  // Function to fetch all orders and their details\n  const getOrders = async () => {\n    try {\n      const response = await axios.get('https://localhost:8080/api/orders');\n      setOrders(response.data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n\n  // Function to generate invoice for a specific order\n  const generateInvoice = orderId => {\n    // Get the order details by orderId from the 'orders' state\n    const order = orders.find(order => order.orderId === orderId);\n\n    // Perform any invoice generation logic here (e.g., calculations, formatting)\n\n    // For this example, let's display a simple alert with the invoice details\n    alert(`Invoice Details:\\n\\nOrder ID: ${order.orderId}\\nCustomer: ${order.customerName}\\nTotal Amount: $${order.totalAmount.toFixed(2)}`);\n  };\n  useEffect(() => {\n    // Fetch orders when the component mounts\n    getOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"EverythingMart Order Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadCSV,\n        children: \"Upload CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Generate Invoice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.orderId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.customerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", order.totalAmount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => generateInvoice(order.orderId),\n                children: \"Generate Invoice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, order.orderId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p6LNz5biBIMJNsvuvM+OoQcfsCw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","orders","setOrders","handleFileChange","e","target","files","uploadCSV","formData","FormData","append","post","headers","getOrders","error","console","response","get","data","generateInvoice","orderId","order","find","alert","customerName","totalAmount","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","map","_c","$RefreshReg$"],"sources":["/home/farhan/EverythingMart/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [orders, setOrders] = useState([]);\n\n  // Function to handle file input change\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  // Function to upload the CSV file\n  const uploadCSV = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      await axios.post('https://localhost:8080/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // Refresh the orders list after successful upload\n      getOrders();\n    } catch (error) {\n      console.error('Error uploading CSV:', error);\n    }\n  };\n\n  // Function to fetch all orders and their details\n  const getOrders = async () => {\n    try {\n      const response = await axios.get('https://localhost:8080/api/orders');\n      setOrders(response.data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n\n  // Function to generate invoice for a specific order\n  const generateInvoice = (orderId) => {\n    // Get the order details by orderId from the 'orders' state\n    const order = orders.find((order) => order.orderId === orderId);\n\n    // Perform any invoice generation logic here (e.g., calculations, formatting)\n\n    // For this example, let's display a simple alert with the invoice details\n    alert(\n      `Invoice Details:\\n\\nOrder ID: ${order.orderId}\\nCustomer: ${order.customerName}\\nTotal Amount: $${order.totalAmount.toFixed(\n        2\n      )}`\n    );\n  };\n\n  useEffect(() => {\n    // Fetch orders when the component mounts\n    getOrders();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>EverythingMart Order Management</h1>\n      <div>\n        <input type=\"file\" onChange={handleFileChange} />\n        <button onClick={uploadCSV}>Upload CSV</button>\n      </div>\n      <div>\n        <h2>Orders</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Order ID</th>\n              <th>Customer Name</th>\n              <th>Total Amount</th>\n              <th>Generate Invoice</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order.orderId}>\n                <td>{order.orderId}</td>\n                <td>{order.customerName}</td>\n                <td>${order.totalAmount.toFixed(2)}</td>\n                <td>\n                  <button onClick={() => generateInvoice(order.orderId)}>Generate Invoice</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}